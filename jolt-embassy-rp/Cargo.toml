[package]
edition = "2021"
name = "jolt-embassy-rp"
version = "0.1.0"
license = "MIT OR Apache-2.0"


[dependencies]
embassy-embedded-hal = { version = "0.3.0", path = "../embassy/embassy-embedded-hal", features = [] }
embassy-sync = { version = "0.6.2", path = "../embassy/embassy-sync", features = [] }
# embassy-executor = { version = "0.7.0", path = "../embassy/embassy-executor", features = ["task-arena-size-98304", "arch-cortex-m", "executor-thread", "executor-interrupt", "rtos-trace"] }
embassy-time = { version = "0.4.0", path = "../embassy/embassy-time", features = [] }
embassy-rp = { version = "0.3.0", path = "../embassy/embassy-rp", features = ["unstable-pac", "time-driver", "critical-section-impl", "rp2040"] }
embassy-usb = { version = "0.4.0", path = "../embassy/embassy-usb", features = [] }
# embassy-net = { version = "0.6.0", path = "../embassy/embassy-net", features = ["tcp", "udp", "raw", "dhcpv4", "medium-ethernet", "dns", "proto-ipv4", "proto-ipv6", "multicast"] }
# embassy-net-wiznet = { version = "0.2.0", path = "../embassy/embassy-net-wiznet", features = [] }
embassy-futures = { version = "0.1.0", path = "../embassy/embassy-futures" }
# embassy-usb-logger = { version = "0.4.0", path = "../embassy/embassy-usb-logger" }
# cyw43 = { version = "0.3.0", path = "../../cyw43", features = ["defmt", "firmware-logs"] }
# cyw43-pio = { version = "0.3.0", path = "../../cyw43-pio", features = ["defmt"] }

embedded-alloc = "0.6.0"

defmt = { version = "0.3", optional = true }
log = { version = "0.4.25", optional = true }
defmt-rtt = { version = "0.4", optional = true }
fixed = "1.23.1"
fixed-macro = "1.2"
systemview-target = { version = "0.1.2", optional = true, features = ["log", "cortex-m", "callbacks-os", "callbacks-os-time" ], path = "../rtos-trace/systemview_target" }
rtos-trace = { version = "0.1", optional = true }

# rtos-trace = "0.1"
# systemview-target = { version = "0.1", features = ["callbacks-os", "callbacks-os-time"] }

# for web request example
# reqwless = { version = "0.13.0", features = ["defmt"] }
# serde = { version = "1.0.203", default-features = false, features = ["derive"] }
# serde-json-core = "0.5.1"

#cortex-m = { version = "0.7.6", features = ["critical-section-single-core"] }
cortex-m = { version = "0.7.6", features = ["inline-asm"] }
cortex-m-rt = "0.7.0"
critical-section = "1.1"
panic-probe = { version = "0.3", features = [], optional = true }
panic-halt = { version = "1.0", optional = true }
# display-interface-spi = "0.5.0"
# embedded-graphics = "0.8.1"
# mipidsi = "0.8.0"
# display-interface = "0.5.0"
# byte-slice-cast = { version = "1.2.0", default-features = false }
smart-leds = "0.4.0"
heapless = "0.8"
usbd-hid = "0.8.1"
rand_core = "0.6.4"
minicbor = { version = "0.25.1", features = ["alloc"] }

embedded-hal-1 = { package = "embedded-hal", version = "1.0" }
embedded-hal-async = "1.0"
embedded-hal-bus = { version = "0.1", features = ["async"] }
embedded-io-async = { version = "0.6.1", features = [] }
embedded-storage = { version = "0.3" }
static_cell = "2.1"
portable-atomic = { version = "1.5", features = ["critical-section"] }

portable-atomic-util = { version = "0.2.4", features = ["alloc"] }

# log = "0.4"
pio-proc = { git = "https://github.com/rp-rs/pio-rs", rev = "fa586448b0b223217eec8c92c19fe6823dd04cc4" }
pio = { git = "https://github.com/rp-rs/pio-rs", rev = "fa586448b0b223217eec8c92c19fe6823dd04cc4" }
rand = { version = "0.8.5", default-features = false }
# assign-resources = { version = "0.4.0", path = "../assign-resources" }
embedded-resources = { version = "0.1.5" }
crc = "3.2.1"
# embedded-sdmmc = "0.7.0"
sha2 = { version = "0.10.8", default-features = false }

[dependencies.embassy-executor]
version = "0.7.0"
path = "../embassy/embassy-executor"
features = [
  # "task-arena-size-32768",
  "task-arena-size-8192",
  "arch-cortex-m",
  "executor-thread",
  "executor-interrupt",
]

[dependencies.bbq-keyboard]
version = "0.1.0"
default-features = false
path = "../bbq-keyboard"
# TODO: Need to be able to use defmt
features = ["proto3"]

[dependencies.bbq-steno]
version = "0.1.0"
default-features = false
path = "../bbq-steno"
features = []

[dependencies.minder]
version = "0.1.0"
default-features = false
path = "../minder"

[features]
default = ["defmt"]
# default = ["log"]

nightly = ["embassy-executor/nightly"]

defmt = [
  "dep:defmt", "embassy-embedded-hal/defmt", "embassy-sync/defmt", "embassy-executor/defmt",
  "embassy-time/defmt", "embassy-rp/defmt", "embassy-usb/defmt", "dep:defmt-rtt",
  "bbq-keyboard/defmt", "bbq-steno/defmt", "embassy-time/defmt-timestamp-uptime",
  "embedded-io-async/defmt-03",
  "panic-probe/print-defmt",
  "minder/defmt",
]
log = [
  "dep:log",
  "dep:panic-halt",
  "bbq-keyboard/log",
  "embassy-executor/log",
  "dep:systemview-target",
  "dep:rtos-trace",
  "systemview-target/log",
  "embassy-executor/rtos-trace",
  "embassy-rp/rtos-trace",
]

[profile.release]
debug = 2
lto = true
opt-level = 'z'

[profile.dev]
debug-assertions = true
overflow-checks = true
debug = 2
lto = true
opt-level = "z"
codegen-units = 1
