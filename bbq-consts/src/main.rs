//! Generate various constants.

use bbq_steno::Stroke;
use bbq_steno_macros::stroke;

fn main() {
    println!("// Autogenerated, do not edit.");
    println!("");
    println!("use crate::Stroke;");
    println!("");
    make("STARTER", stroke!("#^STKPWHR"));
    make("START1", stroke!("^"));
    make("START2", stroke!("SKWH"));
    make("START3", stroke!("#SKWH"));
    make("PRE_SPACE", stroke!("A"));
    make("POST_SPACE", stroke!("O"));

    make("VARIANT_MASK", stroke!("EU"));
    make("VARIANT_0", stroke!(""));
    make("VARIANT_1", stroke!("E"));
    make("VARIANT_2", stroke!("U"));
    make("VARIANT_3", stroke!("EU"));

    make("REPEAT_MASK", stroke!("-TS"));
    make("REPEAT_1", stroke!(""));
    make("REPEAT_2", stroke!("-S"));
    make("REPEAT_3", stroke!("-T"));
    make("REPEAT_4", stroke!("-TS"));

    make("CAP_NEXT", stroke!("*"));

    // All of the patterns.
    make("CODE_MASK", stroke!("-FRPBLG"));
    make("CODE_TAB", stroke!("-FG"));
    make("CODE_UP", stroke!("-RPBG"));
    make("CODE_PGUP", stroke!("-FRPBG"));
    make("CODE_AUDIOPLAY", stroke!("-FRBG"));
    make("CODE_AUDIOMUTE", stroke!("-FRB"));
    make("CODE_SPACE", stroke!(""));
    make("CODE_CAPS", stroke!("-FL"));

    make("CODE_BANG", stroke!("-FR"));
    make("CODE_QUOTE", stroke!("-FP"));
    make("CODE_HASH", stroke!("-FRLG"));
    make("CODE_DOLLAR", stroke!("-RPBL"));
    make("CODE_PERCENT", stroke!("-FRPB"));
    make("CODE_AND", stroke!("-FBG"));
    make("CODE_APOST", stroke!("-F"));
    make("CODE_LPAREN", stroke!("-FPL"));
    make("CODE_RPAREN", stroke!("-RBG"));
    make("CODE_STAR", stroke!("-L"));
    make("CODE_PLUS", stroke!("-G"));
    make("CODE_COMMA", stroke!("-B"));
    make("CODE_MINUS", stroke!("-PL"));
    make("CODE_DOT", stroke!("-R"));
    make("CODE_SLASH", stroke!("-RP"));
    make("CODE_COLON", stroke!("-LG"));
    make("CODE_SEMI", stroke!("-RB"));
    make("CODE_EQUAL", stroke!("-PBLG"));
    make("CODE_QUEST", stroke!("-FPB"));
    make("CODE_AT", stroke!("-FRPBLG"));
    make("CODE_BSLASH", stroke!("-FB"));
    make("CODE_CARET", stroke!("-RPG"));
    make("CODE_UNDER", stroke!("-BG"));
    make("CODE_GRAVE", stroke!("-P"));
    make("CODE_PIPE", stroke!("-PB"));
    make("CODE_TILDE", stroke!("-FPBG"));
    make("CODE_ARROW", stroke!("-FPBL"));
}

fn make(text: &str, stroke: Stroke) {
    println!("pub const {}: Stroke = Stroke::from_raw({}); // \"{}\"",
        text, stroke.into_raw(), stroke);
}
